apiVersion: v1
kind: ConfigMap
metadata:
  name: springboot-app-config
  namespace: devops
  labels:
    app: amaze-stay
    managed-by: finki-devops-team
data:
  SPRING_DATA_MONGODB_URI: mongodb+srv://admin:test@cluster0.bz4besm.mongodb.net/AmazeStay?retryWrites=true&w=majority

---

apiVersion: v1
kind: Secret
metadata:
  name: springboot-app-secrets
  namespace: devops
  labels:
    app: amaze-stay
    managed-by: finki-devops-team
type: Opaque
stringData:
  username: admin
  password: test

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-app
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
        - name: springboot-app
          image: beyza201511/devops-project:latest
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          env:
            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                configMapKeyRef:
                  name: springboot-app-config
                  key: SPRING_DATA_MONGODB_URI
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: springboot-app-secrets
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: springboot-app-secrets
                  key: password

---

apiVersion: v1
kind: Service
metadata:
  name: springboot-app
  namespace: devops
  labels:
    app: amaze-stay
    managed-by: finki-devops-team
spec:
  selector:
    app: springboot-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: springboot-ingress
  namespace: devops
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/entrypoints: websecure
    traefik.ingress.kubernetes.io/redirect-entry-point: websecure
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
    traefik.ingress.kubernetes.io/preserve-host-header: "true"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: springboot-app
                port:
                  number: 8080


